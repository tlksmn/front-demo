import {BehaviorSubject, catchError, NEVER, Observable, Subscription, tap} from "rxjs";
import {Component, OnDestroy} from '@angular/core';
import {MessageService} from "primeng/api";
import {NgForm} from "@angular/forms";

import {SellerService} from "../../common/service/seller.service";
import {SellerResponseApiT} from "../../common/type/api/seller/seller.type";
import {AuthService} from "../../common/service/auth.service";

@Component({
  selector: 'app-seller',
  templateUrl: './seller.component.html',
  styleUrls: ['./seller.component.scss']
})
export class SellerComponent implements OnDestroy {
  constructor(
    private readonly sellerService: SellerService,
    readonly authService: AuthService,
    private readonly messageService: MessageService
  ) {
  }

  ngOnDestroy() {
    this.subscriptions.forEach((e) => {
      e.unsubscribe()
    })
    this.subscriptions = []
  }

  private subscriptions: Subscription[] = []
  request$: Observable<SellerResponseApiT> = this.sellerService.getList()
  addModeStream: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false)

  changeMode(value: boolean) {
    this.addModeStream.next(value);
  }

  addSeller(form: NgForm) {
    const subscription = this.sellerService.addSeller(form.value).pipe(
      tap((value) => {
        this.messageService.add({severity: 'success', summary: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞', detail: '–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ.'})
        this.messageService.add({
          severity: 'warn',
          summary: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞',
          detail: '–ü–æ–¥–æ–∂–¥–∏—Ç–µ 1-2 –º–∏–Ω—É—Ç—ã. \n–í—Å–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Ç–æ—á–µ–∫ –ø—Ä–æ–¥–∞–∂.'
        })
      }),
      catchError((e) => {
        this.messageService.add({severity: 'error', summary: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞', detail: e.error.message})
        if (e.error.statusCode !== 406)
          this.messageService.add({
            severity: 'error',
            summary: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è',
            detail: '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ –ª–æ–≥–∏–Ω. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ'
          })
        else if (e.error.statusCode !== 404)
          this.messageService.add({
            severity: 'error',
            summary: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è',
            detail: '–¢–∞–∫–æ–π –º–∞–≥–∞–∑–∏–Ω —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω —Ä–∞–Ω–µ–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É'
          })
        return NEVER
      })
    ).subscribe()
    this.subscriptions.push(subscription)
  }

  async copyClipboard(text: string) {
    await window.navigator.clipboard.writeText(text);
    this.messageService.add({severity: 'success', summary: '–ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', detail: '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä üî•üöÄ'})
  }
}
